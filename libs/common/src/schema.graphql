type Role {
  id: ID!
  name: String!
}

type AnalyticMetric {
  id: ID!
  name: String!
}

type Period {
  id: ID!
  name: String!
}

type UserCredential {
  id: ID!
  email: String!
  profileImageUrl: String
  roles: [Role]!
  isActive: Boolean!
  #passwordHash: String!
  otp: String
  transactionCategories: [TransactionCategory!]
  transactions: [Transaction!]
  distributingMetricItems: [DistributingMetricItem!]
}

type Currency {
  id: ID!
  name: String!
  code: String!
  distributingMetricItems: [DistributingMetricItem!]
  transactions: [Transaction!]
}

type TransactionCategory {
  id: ID!
  name: String!
  parentCategory: TransactionCategory
  owner: UserCredential
  isSystem: Boolean!
  isOutcome: Boolean!
  childCategories: [TransactionCategory!]
  transactions: [Transaction!]
  distributingMetricItems: [DistributingMetricItem!]
}

type Transaction {
  id: ID!
  datetime: String!
  description: String
  amount: Int!
  owner: UserCredential!
  transactionCategory: TransactionCategory!
  currency: Currency!
}

type DistributingMetricItem {
  id: ID!
  user: UserCredential!
  period: Period!
  metric: AnalyticMetric!
  category: TransactionCategory
  baseCurrency: Currency
}

input UpdateRole {
  id: String!
}

input UpdateRolesInput {
  connect: [UpdateRole!]
  set: [UpdateRole!]
  disconnect: [UpdateRole!]
}

input UpdateUserCredentialInput {
  id: String!
  email: String
  profileImageUrl: String
  isActive: Boolean
  roles: UpdateRolesInput
}

input CreateCurrencyInput {
  name: String!
  code: String!
}

input UpdateCurrencyInput {
  id: String!
  name: String!
  code: String!
}

input CreateTransactionCategoryInput {
  name: String!
  isSystem: Boolean!
  isOutcome: Boolean!
  parentCategory: UpdateTransactionCategoryInput
}

input UpdateTransactionCategoryInput {
  id: String!
  name: String!
  isSystem: Boolean!
  isOutcome: Boolean!
  parentCategory: UpdateTransactionCategoryInput
}

type Query {
  roles: [Role!]!
  userCredentials: [UserCredential!]!
  userCredential(id: String!): UserCredential
  currencies: [Currency!]!
  currency(id: String!): Currency
  transactionCategories: [TransactionCategory!]!
  transactionCategory(id: String!): TransactionCategory
}

type Mutation {
  updateUserCredential(data: UpdateUserCredentialInput!): UserCredential
  createCurrency(data: CreateCurrencyInput!): Currency
  updateCurrency(data: UpdateCurrencyInput!): Currency
  deleteCurrency(id: String!): Currency
  createTransactionCategory(data: CreateTransactionCategoryInput!): TransactionCategory
  updateTransactionCategory(data: UpdateTransactionCategoryInput!): TransactionCategory
  deleteTransactionCategory(id: String!): TransactionCategory
}

version: '2.2'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      #- discovery.seed_hosts=es02,es03
      #- cluster.initial_master_nodes=es01,es02,es03
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  #es02:
  #  image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
  #  container_name: es02
  #  environment:
  #    - node.name=es02
  #    - cluster.name=es-docker-cluster
  #    - discovery.seed_hosts=es01,es03
  #    - cluster.initial_master_nodes=es01,es02,es03
  #    - bootstrap.memory_lock=true
  #    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #  volumes:
  #    - data02:/usr/share/elasticsearch/data
  #  ports:
  #    - 9201:9201
  #  networks:
  #    - elastic

  #es03:
  #  image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
  #  container_name: es03
  #  environment:
  #    - node.name=es03
  #    - cluster.name=es-docker-cluster
  #    - discovery.seed_hosts=es01,es02
  #    - cluster.initial_master_nodes=es01,es02,es03
  #    - bootstrap.memory_lock=true
  #    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #  ulimits:
  #    memlock:
  #      soft: -1
  #      hard: -1
  #  volumes:
  #    - data03:/usr/share/elasticsearch/data
  #  ports:
  #    - 9202:9202
  #  networks:
  #    - elastic

  kib01:
    image: docker.elastic.co/kibana/kibana:7.9.1
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    networks:
      - elastic

  postgres:
    image: 'postgres:latest'
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      # - db-data:/var/lib/postgres
      - ./dbdata:/var/lib/postgresql/data
      - ./dbscripts:/docker-entrypoint-initdb.d
    networks:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s
      retries: 50


volumes:
  #db-data:
  #  driver: local
  data01:
    driver: local
  #data02:
  #  driver: local
  #data03:
  #  driver: local

networks:
  elastic:
    driver: bridge
  db:
    driver: bridge